
name: 'Terraform Deploy'

on:
  workflow_dispatch:
   inputs:
     instance_name:
       description: 'Pass your instance name'
       type: string
       required: true
       
permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: Information Technology - Testing

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
        role-session-name: GitHub-Action-Role
        aws-region: "us-west-1"
        
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules,etc.
    - name: Terraform Init
      run: terraform init
      #working-directory: ./ec2
      
    #  Terraform Workspace
    # - name: Terraform Workspace
    #   run: terraform workspace new ${{ inputs.instance_name }}

    # Checks that all Terraform configuration files adhere to a canonical format
    #- name: Terraform Format
     # run: terraform fmt -check
    
    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false -out tfplan
      #working-directory: ./ec2
      
    # On push to main, build or change infrastructure according to Terraform configuration files
    # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      run: terraform apply "tfplan"
      #working-directory: ./ec2
